{"version":3,"sources":["images/star-wars-logo.png","Context/Context.js","Context/Provider.jsx","Components/SearchBoxFilter.jsx","Components/Header.jsx","Components/Table.jsx","Components/NumericFilterForm.jsx","Components/Footer.jsx","App.js","index.js"],"names":["module","exports","Context","createContext","Provider","children","React","useState","data","setData","dataToRender","setDataToRender","isLoading","setIsLoading","filterByName","name","filterByNumericValues","filters","setFilters","dropdownContent1","setDropdownContent1","fetchSWPlanets","a","fetch","response","json","results","useEffect","filter","planet","toLowerCase","includes","i","length","comparison","column","Number","value","option","contextObj","SearchBoxFilter","useContext","type","placeholder","onChange","target","Header","id","src","logo","alt","Table","map","title","index","scope","key","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","eachFilm","index2","className","created","edited","url","NumericFilterForm","setColumn","setComparison","setValue","numericFilterObj","onDeleteFilterBtnClick","obj1","resultData","obj2","forEach","obj3","index1","min","onClick","disabled","obj","Footer","href","rel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cd2799e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-wars-logo.a41cce90.png\";","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\n\nfunction Provider({ children }) {\n  const FILTERS_INITIAL_STATE = { // Estado inicial da key \"filters\", para que o avaliador funcione.\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n  };\n\n  const [data, setData] = React.useState([]);\n  const [dataToRender, setDataToRender] = React.useState([]); // Quando os filtros forem aplicados, é essa 'key' que será alterada e não a key 'data'.\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [filters, setFilters] = React.useState(FILTERS_INITIAL_STATE);\n  const [dropdownContent1, setDropdownContent1] = React.useState(['Selecione',\n    'population', 'orbital_period', 'diameter',\n    'rotation_period', 'surface_water']); // Dados utilizados no <select/> do componente <NumericFilterForm />.\n\n  // REQUISIÇÃO API:\n  const fetchSWPlanets = async () => { // Estruturando função que fará o fetch() para a url da API de Star Wars.\n    setIsLoading(true);\n    const response = await fetch('https://swapi-trybe.herokuapp.com/api/planets/');\n    const { results } = await response.json(); // Captando a chave \"results\" do JSON retornado pela API.\n    setData(results);\n    setDataToRender(results);\n    setIsLoading(false);\n  };\n\n  React.useEffect(() => { fetchSWPlanets(); }, []); // 2° parâmetro = [] --> useEffect() utilizada como componentDidMount().\n\n  // PESQUISA POR NOME DE UM PLANETA EM <SearchBoxFilter />:\n  const onFilterByNameUpdate = () => {\n    const { filterByName: { name } } = filters;\n    setDataToRender(data.filter((planet) => planet.name.toLowerCase()\n      .includes(name.toLowerCase())));\n\n    setFilters({ // Quando um nome for pesquisado, os filtros numéricos serão limpos. A lógica é OU pesquisar por nome OU pesquisar por número.\n      ...filters,\n      filterByNumericValues: [],\n    });\n\n    setDropdownContent1([ // Tendo em vista que os filtros numéricos serão limpos, o array \"dropdownContent1\" deve ser \"reiniciado\".\n      'Selecione', 'population', 'orbital_period', 'diameter',\n      'rotation_period', 'surface_water']);\n  };\n\n  React.useEffect(onFilterByNameUpdate, [filters.filterByName.name]); // 2° parâmetro = [variável] --> useEffect() utilizada como componentDidUpdate(). Sempre quando a key 'filters.filterByName.name' do Estado for alterada (isso é, quando o usuário pesquisa o nome de um planeta), esse useEffect() será chamado.\n\n  // UTILIZAÇÃO DOS FILTROS PRESENTES EM <NumericFilterForm />:\n  const onNumericFilterUpdate = () => {\n    const { filterByNumericValues } = filters;\n    const i = filterByNumericValues.length - 1; // Captando o índice do objeto [filtro] que foi adicionado mais recentemente no array filterByNumericValues, oriundo do context.\n\n    if (filterByNumericValues.length > 0\n      && filterByNumericValues[i].comparison === 'maior que') {\n      setDataToRender(\n        dataToRender.filter((planet) => planet[filterByNumericValues[i].column]\n        > Number(filterByNumericValues[i].value)),\n      );\n    }\n    if (filterByNumericValues.length > 0\n      && filterByNumericValues[i].comparison === 'menor que') {\n      setDataToRender(\n        dataToRender.filter((planet) => planet[filterByNumericValues[i].column]\n        < Number(filterByNumericValues[i].value)),\n      );\n    }\n    if (filterByNumericValues.length > 0\n      && filterByNumericValues[i].comparison === 'igual a') {\n      setDataToRender(\n        dataToRender.filter((planet) => Number(planet[filterByNumericValues[i].column])\n        === Number(filterByNumericValues[i].value)),\n      );\n    }\n\n    if (filterByNumericValues.length > 0) { // REQ 4: Retirando a opção do dropdownContent1, quando essa já estiver sido escolhida em algum filtro.\n      setDropdownContent1(dropdownContent1.filter((option) => option\n        !== filterByNumericValues[i].column));\n    }\n  };\n\n  React.useEffect(onNumericFilterUpdate, [filters.filterByNumericValues]); // 2° parâmetro = [variável] --> useEffect() utilizada como componentDidUpdate(). Sempre quando a key 'filters.filterByNumericValues' do Estado for alterada (isso é, quando o usuário utilizar os filtros numéricos), esse useEffect() será chamado.\n\n  const contextObj = {\n    data,\n    dataToRender,\n    setDataToRender,\n    isLoading,\n    dropdownContent1,\n    setDropdownContent1,\n    filters,\n    setFilters,\n  };\n\n  return (\n    <Context.Provider value={ contextObj }>\n      { children }\n    </Context.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired, // A prop \"children\" será um nó (node) filho do provider.\n};\n\nexport default Provider;\n","import React from 'react';\nimport Context from '../Context/Context';\n\nfunction SearchBoxFilter() {\n  const { filters, setFilters } = React.useContext(Context);\n\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Nome de planeta...\"\n      value={ filters.filterByName.name }\n      onChange={ ({ target }) => setFilters({\n        ...filters,\n        filterByName: { name: target.value },\n      }) }\n    />\n  );\n}\n\nexport default SearchBoxFilter;\n","import React from 'react';\nimport SearchBoxFilter from './SearchBoxFilter';\nimport logo from '../images/star-wars-logo.png';\nimport '../Styles/Header.css';\n\nfunction Header() {\n  return (\n    <header id=\"pageHeader\">\n      <div id=\"headerCentralContainer\">\n        <img\n          src={ logo }\n          alt=\"Logo Star Wars\"\n        />\n        <SearchBoxFilter />\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Context from '../Context/Context';\nimport '../Styles/Table.css';\n\nfunction Table() {\n  const { dataToRender, isLoading } = React.useContext(Context); // Captando as keys necessárias, diretamente do contexto global.\n  const thContent = ['Name', 'Rotation Period', 'Orbital Period',\n    'Diameter', 'Climate', 'Gravity',\n    'Terrain', 'Surface Water', 'Population',\n    'Films', 'Created', 'Edited', 'URL'];\n\n  return (\n    isLoading\n      ? (\n        <span id=\"loadingSpan\">Carregando Informações...</span>\n      )\n      : (\n        <div id=\"SWPlanetsTableContainer\">\n          <table id=\"SWPlanetsTable\">\n            <thead>\n              <tr>\n                { thContent.map((title, index) => (\n                  <th scope=\"col\" key={ index }>{ title }</th>\n                )) }\n              </tr>\n            </thead>\n            <tbody>\n              { dataToRender.map((planet, index) => (\n                <tr key={ index }>\n                  <td>{ planet.name }</td>\n                  <td>{ planet.rotation_period }</td>\n                  <td>{ planet.orbital_period }</td>\n                  <td>{ planet.diameter }</td>\n                  <td>{ planet.climate }</td>\n                  <td>{ planet.gravity }</td>\n                  <td>{ planet.terrain }</td>\n                  <td>{ planet.surface_water }</td>\n                  <td>{ planet.population }</td>\n                  <td>\n                    { planet.films.map((eachFilm, index2) => (\n                      <ul key={ index2 } className=\"filmsContainer\">\n                        <li>{eachFilm}</li>\n                      </ul>\n                    )) }\n                  </td>\n                  <td>{ planet.created }</td>\n                  <td>{ planet.edited }</td>\n                  <td>{ planet.url }</td>\n                </tr>\n              )) }\n            </tbody>\n          </table>\n        </div>)\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport Context from '../Context/Context';\nimport '../Styles/NumericFilterForm.css';\n\nfunction NumericFilterForm() {\n  const { data, setDataToRender, dropdownContent1,\n    setDropdownContent1, filters, setFilters } = React.useContext(Context);\n\n  const [column, setColumn] = React.useState(dropdownContent1[0]);\n  const [comparison, setComparison] = React.useState('maior que');\n  const [value, setValue] = React.useState('100000');\n  const numericFilterObj = { column, comparison, value }; // União dos 3 estados locais em um único objeto, para enviá-lo para o contexto global quando o botão for clicado.\n\n  const dropdownContent2 = ['maior que', 'menor que', 'igual a'];\n\n  const onFilterBtnClick = () => { // Função que adiciona o numericFilterObj dentro do array filterByNumericValues, presente no contexto global.\n    setFilters({\n      ...filters,\n      filterByNumericValues: [...filters.filterByNumericValues, numericFilterObj],\n    });\n    setColumn('Selecione');\n  };\n\n  const onDeleteFilterBtnClick = ({ target }) => { // Função responsável pelas ações que ocorrem quando um determinado filtro é excluído.\n    const { filterByNumericValues } = filters;\n\n    setFilters({ // Retirando o filtro clicado, do array de filtros.\n      ...filters,\n      filterByNumericValues: filterByNumericValues\n        .filter((obj1) => obj1.column !== target.id),\n    });\n\n    setDropdownContent1([ // Voltando com a opção (population, diameter...) para dentro do array \"dropdownContent1\", utilizado pelo 1° <select/> do <form/> abaixo.\n      target.id,\n      ...dropdownContent1,\n    ]);\n\n    if (filterByNumericValues.length === 1) { // Lógica para quando há apenas 1 filtro a ser excluído.\n      setDataToRender(data);\n    }\n\n    if (filterByNumericValues.length > 1) { // Lógica para quando há mais de 1 filtro a ser excluído.\n      let resultData = [...data];\n      const nonDeletedFilters = filterByNumericValues\n        .filter((obj2) => obj2.column !== target.id);\n\n      nonDeletedFilters.forEach((obj3) => {\n        if (obj3.comparison === 'maior que') {\n          resultData = resultData.filter((planet) => planet[obj3.column]\n            > Number(obj3.value));\n        }\n        if (obj3.comparison === 'menor que') {\n          resultData = resultData.filter((planet) => planet[obj3.column]\n            < Number(obj3.value));\n        }\n        if (obj3.comparison === 'igual a') {\n          resultData = resultData.filter((planet) => Number(planet[obj3.column])\n            === Number(obj3.value));\n        }\n      });\n      setDataToRender(resultData);\n    }\n  };\n\n  return (\n    <section id=\"numericFilterContainer\">\n      <form id=\"numericFilterForm\">\n        <select\n          value={ column }\n          onChange={ ({ target }) => setColumn(target.value) }\n        >\n          {dropdownContent1.map((option, index1) => (\n            <option key={ index1 }>{option}</option>\n          ))}\n        </select>\n        <select\n          value={ comparison }\n          onChange={ ({ target }) => setComparison(target.value) }\n        >\n          {dropdownContent2.map((option, index2) => (\n            <option key={ index2 }>{option}</option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          min=\"0\"\n          value={ value }\n          onChange={ ({ target }) => setValue(target.value) }\n        />\n        <button\n          id=\"filterBtn\"\n          type=\"button\"\n          onClick={ onFilterBtnClick }\n          disabled={ column === 'Selecione' }\n        >\n          Filtrar\n        </button>\n      </form>\n\n      {filters.filterByNumericValues && filters.filterByNumericValues\n        .map((obj) => (\n          <div key={ obj.column } id=\"eachChosenFilter\">\n            {`${obj.column} é ${obj.comparison} ${obj.value}`}\n            <button\n              id={ obj.column }\n              type=\"button\"\n              onClick={ onDeleteFilterBtnClick }\n            >\n              X\n            </button>\n          </div>))}\n    </section>\n  );\n}\n\nexport default NumericFilterForm;\n","import React from 'react';\nimport '../Styles/Footer.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      <span>\n        Developed by\n        {' '}\n        <a href=\"https://github.com/joaofelipelliccione\" rel=\"noopener noreferrer\" target=\"_blank\">João Felipe Pelliccione</a>\n      </span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Provider from './Context/Provider';\nimport Header from './Components/Header';\nimport Table from './Components/Table';\nimport NumericFilterForm from './Components/NumericFilterForm';\nimport Footer from './Components/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Header />\n      <NumericFilterForm />\n      <Table />\n      <Footer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}